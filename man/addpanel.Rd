% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/addpanel.R
\name{addpanel}
\alias{addpanel}
\title{addpanel}
\usage{
addpanel(figure, panel, topPanel = 1, bottomPanel = topPanel,
  leftPanel = 1, rightPanel = leftPanel, panelLabel = head(attr(figure,
  "multipanelfigure.panelLabelsFree"), 1))
}
\arguments{
\item{figure}{Object of classes \code{multipanelfigure}/\code{\link[gtable]{gtable}}
as produced by \code{\link{multipanelfigure}} and representing the figure the
panel is to be placed in.}

\item{panel}{Single \code{\link{character}} object representing path to a
bitmap image (\code{*.png}, \code{*.tiff}/\code{*.tif},
\code{*.jpg}/\code{*.jpeg}), a \code{\link[ggplot2]{ggplot}} object , a
\code{\link[lattice]{trellis.object}}, a \code{\link[grid]{gList}} object or
a \code{\link[grid]{grob}} object to be placed in a multipanel figure. See
'Details'.}

\item{topPanel}{Single \code{\link{numeric}} indicating the row index of
the panel that is to be placed in the figure.}

\item{bottomPanel}{Single \code{\link{numeric}} indicating the lower row
index of the panel that is to be placed in the figure. Important for
definition of panel spanning (see examples).}

\item{leftPanel}{Single \code{\link{numeric}} indicating the column index
of the panel that is to be placed in the figure.}

\item{rightPanel}{Single \code{\link{numeric}} indicating the right column
index of the panel that is to be placed in the figure. Important for
definition of panel spanning (see examples).}

\item{panelLabel}{Single \code{\link{character}} object defining the panel
label used for automated annotation.}
}
\value{
Returns the \code{\link[gtable]{gtable}} object fed to it
(\code{figure}) with the addition of the \code{panel}.
}
\description{
A convenience function adding graphical objects to a
\code{\link[gtable]{gtable}} constructed by \code{\link{multipanelfigure}}.
}
\details{
Currently supported as panel-representing objects (\code{panel}) are
\enumerate{
  \item{\code{\link[ggplot2]{ggplot}} objects.}
  \item{\code{\link[grid]{grob}} objects.}
  \item{\code{\link[grid]{gList}} objects.}
  \item{\code{\link[lattice]{trellis.object}} objects.}
  \item{Single \code{\link{character}} objects representing paths to readable
    portable network graphics (\code{*.png}), tagged image file format
    (\code{*.tiff}/\code{*.tif}) or joint photographic experts group
    (\code{*.jpg}/\code{*.jpeg}) files, which will be read and placed into
    panels as requested.}}
Note that \code{*.jpg}/\code{*.jpeg} files must be produced
using the dimensions of the panle(s) they are to be placed in for sensible
results. \code{\link[ggplot2]{ggplot}} objects obviously auto-scale and
\code{*.tiff}/\code{*.tif}, as well as \code{*.png} files have their native
sizes read out of the file (which isn't working for
\code{*.jpg}/\code{*.jpeg}).
\pkg{lattice}-generated \code{\link[lattice]{trellis.object}}s are converted to
\code{grob}s using \code{grid.grabExpr(print(x))}, the side effects of which
with respect to plot formatting are not well studied.
}
\examples{
# Create the figure layout
require(gtable)
Figure <- multipanelfigure(
  widths = c(20,30,30,30),
  heights = c(40,60,60,60),
  figureName = "Figure")
gtable_show_layout(Figure)
# All panels are free
attr(Figure,"multipanelfigure.panelsFree")
# Clear canvas
grid.newpage()

# Make a simple ggplot object to fill panels
require(ggplot2)
p <- ggplot(mtcars, aes(wt, mpg))
p <- p + geom_point()

# Fill a first panel using the ggplot object directly
Figure <- addpanel(Figure, p, topPanel = 1, leftPanel = 1)
grid.draw(Figure)
# One panel is occupied
attr(Figure,"multipanelfigure.panelsFree")
# Clear canvas
grid.newpage()

# Write the ggplot object to a temporary *.jpg, re-read and use it
# horizontally spanning 2 panels
require(jpeg)
tmpFile <- tempfile(fileext = ".jpg")
ggsave(
  filename = tmpFile,
  plot = p,
  width = 30,
  height = 40,
  units = "mm",
  dpi = 300)
Figure <- addpanel(
    Figure,
    tmpFile,
    topPanel = 1,
    leftPanel = 2)
grid.draw(Figure)
# Two panels are occupied
attr(Figure,"multipanelfigure.panelsFree")
# Clear canvas
grid.newpage()

# Write the ggplot object to a temporary *.png, re-read and use it
# horizontally spanning 2 panels
require(png)
tmpFile <- tempfile(fileext = ".png")
ggsave(
  filename = tmpFile,
  plot = p,
  width = 55,
  height = 60,
  units = "mm",
  dpi = 300)
Figure <- addpanel(
    Figure,
    tmpFile,
    topPanel = 2,
    leftPanel = 1,
    rightPanel = 2)
grid.draw(Figure)
# Four panels are occupied
attr(Figure,"multipanelfigure.panelsFree")
# Clear canvas
grid.newpage()

# Write the ggplot object to a temporary *.tif, re-read and use it
# vertically spanning 2 panels
require(tiff)
tmpFile <- tempfile(fileext = ".tiff")
ggsave(
  filename = tmpFile,
  plot = p,
  width = 30,
  height = 125,
  units = "mm",
  dpi = 300)
Figure <- addpanel(
  Figure,
  tmpFile,
  topPanel = 2,
  bottomPanel = 3,
  leftPanel = 3)
grid.draw(Figure)
# Six panels are occupied
attr(Figure,"multipanelfigure.panelsFree")
# Clear canvas
grid.newpage()

\dontrun{
# Incorporate a lattice/trellis object
require(lattice)
Depth <- equal.count(quakes$depth, number=8, overlap=.1)
latticePlot_trellis <- xyplot(lat ~ long | Depth, data = quakes)
Figure <- addpanel(
  Figure,
  latticePlot_trellis,
  topPanel = 3,
  leftPanel = 1,
  rightPanel = 2)
grid.draw(Figure)
# Eight panels are occupied
attr(Figure,"multipanelfigure.panelsFree")
# Clear canvas
grid.newpage()

# Incorporate a gList object (such as produced by VennDigram)
require(VennDiagram)
venn_plot <- venn.diagram(
  x = list(A = 1:150, B = 121:170),
  filename = NULL)
Figure <- addpanel(
  Figure,
  venn_plot,
  topPanel = 4,
  leftPanel = 1,
  rightPanel = 2)
grid.draw(Figure)
# Ten panels are occupied
attr(Figure,"multipanelfigure.panelsFree")

# Incorporate a base plot figure (produces minor margin issues)
require(gridGraphics)
plot(seq(10))
grid.echo()
grid.grab() -> base_plot
Figure <- addpanel(
  Figure,
  base_plot,
  topPanel = 4,
  leftPanel = 3,
  rightPanel = 4)
grid.draw(Figure)
# Twelve panels are occupied
attr(Figure,"multipanelfigure.panelsFree")
}
}
\author{
Johannes Graumann
}
\seealso{
\code{\link[gtable]{gtable}}, \code{\link{multipanelfigure}},
\code{\link[tiff]{readTIFF}}, \code{\link[png]{readPNG}},
\code{\link[jpeg]{readJPEG}}
}

